/*! @keithclark/shaderview v1.2.0 - Keith Clark - MIT license */
class e extends Error{constructor(e,r=""){super(e),console.error(e+"\n  "+r.replace(/\n/g,"\n  "))}}class r{#e;#r;#t;#n=new Map;constructor(e,r,t){if(!e instanceof WebGLRenderingContext)throw new Error("Argument 1 must be a WebGLRenderingContext");this.#e=e,this.#r=this.#o(r,t),this.#t=this.#i(this.#r)}#s(r,t){const n=this.#e,o=n.createShader(t);if(n.shaderSource(o,r),n.compileShader(o),!n.getShaderParameter(o,n.COMPILE_STATUS))throw new e(`Shader compilation failed (SHADER_TYPE=${t})`,n.getShaderInfoLog(o));return o}#o(r,t){const n=this.#e;n.clearColor(1,1,1,0);const o=this.#s(t,n.VERTEX_SHADER),i=this.#s(r,n.FRAGMENT_SHADER),s=n.createProgram();if(n.attachShader(s,o),n.attachShader(s,i),n.linkProgram(s),!n.getProgramParameter(s,n.LINK_STATUS))throw new e("Program link failed",n.getProgramInfoLog(s));n.useProgram(s);const a=new Float32Array([1,1,-1,1,1,-1,-1,-1]),c=n.createBuffer();n.bindBuffer(n.ARRAY_BUFFER,c),n.bufferData(n.ARRAY_BUFFER,a,n.STATIC_DRAW);const f=n.getAttribLocation(s,"position");return n.enableVertexAttribArray(f),n.vertexAttribPointer(f,2,n.FLOAT,!1,0,0),s}#i=e=>{const r=new Map,t=this.#e,n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let o=0;o<n;o++){const{type:n,name:i}=t.getActiveUniform(e,o),s=t.getUniformLocation(e,i);let a;a=n===t.BOOL?e=>t.uniform1i(s,e?1:0):n===t.FLOAT?e=>t.uniform1f(s,e):n===t.FLOAT_VEC2?(...e)=>t.uniform2f(s,...e):n===t.FLOAT_VEC3?(...e)=>t.uniform3f(s,...e):n===t.FLOAT_VEC4?(...e)=>t.uniform4f(s,...e):n===t.INT?e=>t.uniform1i(s,e):n===t.INT_VEC2?(...e)=>t.uniform2i(s,...e):n===t.INT_VEC3?(...e)=>t.uniform3i(s,...e):n===t.INT_VEC4?(...e)=>t.uniform4i(s,...e):()=>{console.warn(`Uniform "${i}" is an unsupported type ${n}.`)},r.set(i,a)}return r};render(){const e=this.#e,{canvas:r}=e,{width:t,height:n}=r;for(const[e,r]of this.#n.entries())this.#t.get(e)?.(...r);this.#n.clear(),e.viewport(0,0,t,n),e.drawArrays(e.TRIANGLE_STRIP,0,4)}dispose(){const e=this.#e;e.clear(e.COLOR_BUFFER_BIT),e.deleteProgram(this.#r),this.#n.clear()}setUniform(e,...r){return!!this.#t.has(e)&&(this.#n.set(e,r),!0)}}const t=e=>{e.postMessage({status:"ok"})},n=(e,r)=>{e.postMessage({status:"fail",reason:r})},o="uTime",i="uResolution";let s,a,c,f=null,m=null,l=0,h=0,d=0,u=0;self.onmessage=e=>{const{cmd:f,data:m}=e.data,[g]=e.ports;if("setCanvas"===f){a=m;try{c=a.getContext("webgl"),t(g)}catch(e){n(g,"Unable to obtain a WebGL context")}}else if("setSource"===f)try{s=new r(c,m.fragmentSource,m.vertexSource),t(g),scheduleRender()}catch(e){s=null,n(g,e.message)}else if("resize"===f)l=m.width,h=m.height,scheduleRender();else if("pause"===f)!0===m?A():p();else if("setTime"===f)u=m,d=performance.now()/1e3-u,scheduleRender();else if("dispose"===f){if(!s)return;cancelRender(),A(),s.dispose(),s=null}else if("setUniform"===f){if(!s)return;const{name:e,values:r}=m;if(s.setUniform(e,...r))scheduleRender();else if(e!==i&&e!==o)throw new ReferenceError(`Uniform "${e}" does not exist.`)}},cancelRender=()=>{cancelAnimationFrame(f),f=null},scheduleRender=()=>{f||(f=requestAnimationFrame((()=>{f=null,g()})))};const g=()=>{s&&(l===a.width&&h===a.height||(a.width=l,a.height=h,s.setUniform(i,l,h)),s.setUniform(o,u),s.render())},p=()=>{if(m)return;d=performance.now()/1e3-u;const e=()=>{u=performance.now()/1e3-d,scheduleRender(),m=requestAnimationFrame(e)};e()},A=()=>{cancelAnimationFrame(m),m=null};
